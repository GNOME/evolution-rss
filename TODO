
	* maybe implement md5 for uniqueing articles (for broken feeds)
	* check webkit area sizing when using zoom in/out
	* implement other engines besides soup
	* implement USM (universal subscription mechanism)
	* implement notify back of imported feed perhaps libnotify
	* offline storage for article's home page
	* implement web controls for diferent redering <Webkits> or <Gecko>
	* when adding a feed as opml file offer to import (file detection)
	* cache large feeds
	* fix recursivity on layer_find_pos
	* provide predefined groups of feeds (OSS & co)
	* evolution import rss add no. of retries
	* slow delete operation on large folders
	* add handling parser error to setup_feed (check HIG for error msg)
	* use combo popup for moving and placement of feed folders
	* check webbuttons for webkit
	* cancel operation should cancel fetching feed components
	* perhaps make quoted text fancier
	* grey out disabled folders (feeds)
	* feed check runtime validation
	* wrong send and receive count of articles after import
	* handle 404 for images in comments
	* gtkhtml does not handle script tag properly
	* gtkhtml does not handle &#xD; construct
	* switch webkit -> gecko leads to crash on pfree()
	* show feed icons in send & receive dialog
	* support comments postings
	* detect duplicate items by content not by feedid
	* make gtkhtml rendering non-blocking
	* use ellipsize in web auth dialog
	* check feed_folders for errors
	* fix comment cancellation
	* fix wrong SSL browser dialog
	* check custom interval fetching right after it was setup
	* search for threaded implmentation options
	* config option to sort comments ascending/descending
	* hook all rss config options in RSS top folder properties in right click menu
	* image contained in feeds displayed after the coments ??
	* accept feeds clicked from mails - add feed option to right click context menu
	* when delete folder remove any pending filter process
	* when import opml print opml title
	* import without fetching (add without validate ?)
	* do not mark folders as feeds (icon)
